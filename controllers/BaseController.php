<?php

namespace app\controllers;

use app\exceptions\ValidationHttpException;
use app\helpers\AnalyticsHelper;
use yii\filters\ContentNegotiator;
use yii\rest\Controller;
use yii\web\Response;

class BaseController extends Controller
{
    /**
     * @return array
     */
    public function behaviors()
    {
        return array_merge(parent::behaviors(), [
            'contentNegotiator' => [
                'class' => ContentNegotiator::class,
                'formats' => [
                    'application/json' => Response::FORMAT_JSON,
                ],
            ],
        ]);
    }

    /**
     * @param $action
     * @param $result
     * @return mixed
     * @throws \yii\base\Exception
     */
    public function afterAction($action, $result)
    {
        if (\Yii::$app->user->isGuest) {
            $userId = \Yii::$app->session->get('__guestId');
            if ($userId === null) {
                $userId = \Yii::$app->security->generateRandomString();
                \Yii::$app->session->set('__guestId', $userId);
            }
        } else {
            $userId = \Yii::$app->user->getId();
        }

        AnalyticsHelper::log($userId, \Yii::$app->request->url);

        return parent::afterAction($action, $result); // TODO: Change the autogenerated stub
    }


    /**
     * @param $message
     * @param int $code
     * @throws ValidationHttpException
     * @return void
     */
    protected function throwError($message, $code = 0): void
    {
        throw new ValidationHttpException($message, $code);
    }
}
